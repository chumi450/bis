var patronEmail = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
var patronNoSpecialCharacterAndEmojis =/^(?:(?!(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[\u0023-\u0039]\ufe0f?\u20e3|\u3299|\u3297|\u303d|\u3030|\u24c2|\ud83c[\udd70-\udd71]|\ud83c[\udd7e-\udd7f]|\ud83c\udd8e|\ud83c[\udd91-\udd9a]|\ud83c[\udde6-\uddff]|\ud83c[\ude01-\ude02]|\ud83c\ude1a|\ud83c\ude2f|\ud83c[\ude32-\ude3a]|\ud83c[\ude50-\ude51]|\u203c|\u2049|[\u25aa-\u25ab]|\u25b6|\u25c0|[\u25fb-\u25fe]|\u00a9|\u00ae|\u2122|\u2139|\ud83c\udc04|[\u2600-\u26FF]|\u2b05|\u2b06|\u2b07|\u2b1b|\u2b1c|\u2b50|\u2b55|\u231a|\u231b|\u2328|\u23cf|[\u23e9-\u23f3]|[\u23f8-\u23fa]|\ud83c\udccf|\u2934|\u2935|[\u2190-\u21ff]))[^`~!+,!@#$%^&*();\/|<>"=[\]{}_☺]){1,255}$/;
var patronNoEmojis =/^(?:(?!(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[\u0023-\u0039]\ufe0f?\u20e3|\u3299|\u3297|\u303d|\u3030|\u24c2|\ud83c[\udd70-\udd71]|\ud83c[\udd7e-\udd7f]|\ud83c\udd8e|\ud83c[\udd91-\udd9a]|\ud83c[\udde6-\uddff]|\ud83c[\ude01-\ude02]|\ud83c\ude1a|\ud83c\ude2f|\ud83c[\ude32-\ude3a]|\ud83c[\ude50-\ude51]|\u203c|\u2049|[\u25aa-\u25ab]|\u25b6|\u25c0|[\u25fb-\u25fe]|\u00a9|\u00ae|\u2122|\u2139|\ud83c\udc04|[\u2600-\u26FF]|\u2b05|\u2b06|\u2b07|\u2b1b|\u2b1c|\u2b50|\u2b55|\u231a|\u231b|\u2328|\u23cf|[\u23e9-\u23f3]|[\u23f8-\u23fa]|\ud83c\udccf|\u2934|\u2935|[\u2190-\u21ff]))☺]){1,255}$/;


function downloadFile(blob, fileName, type){

	var typeAplication;
	
	switch(type.toLowerCase()) {
	    case 'txt':
	    	typeAplication = "text/plain";
	        break;
	    case 'xls':
	    	typeAplication = "application/vnd.ms-excel";
	        break;
        case 'excel':
            typeAplication = "application/vnd.ms-excel";
            break;
	    case 'pdf':
	    	typeAplication = "application/pdf";
	        break;
	    case 'csv':
	    	typeAplication = "application/csv";
	        break;
	}
	
    // Internet Explorer 6-11
    var isIE = /*@cc_on!@*/ false || !!document.documentMode;
    var options = {
			type: typeAplication
		};
    if (isIE) {
        // IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
        //window.navigator.msSaveBlob(blob, filename);
    	var file = new Blob([blob], options);
        window.navigator.msSaveBlob(file, fileName);
        //window.navigator.msSaveOrOpenBlob(file, fileName);
    } else{
    	var link = document.createElement('a');
        link.href = window.URL.createObjectURL(blob);
        link.download = fileName;
        //link.target = '_blank'
        document.body.appendChild(link);
        link.click();
    }  
}



/**
 * @param elem (jquery) input to format
 * @param decimals (boolean) if the element accepts decimals
 */

function formatAmount(elem, decimals) {

    var value = elem.val()
    value = value.replace(/\./g, '')
    value = value.replace(/,/g, '.')
    value = value.replace(/[^0-9\.]+/g, '')

    var number = value.split('.');
    var formattedString = number[0].replace(/\B(?=(\d{3})+\b)/g, ".")

    if (decimals) {
        if (value.indexOf('.') > 0 && value.indexOf('.') == value.length - 1) {
            formattedString += ','
        } else if (number[1] !== undefined) {
            //formattedString += ',' + parseInt(number[1].substring(0, 2))
            formattedString += ',' + number[1].substring(0, 2)
        }
    }

    elem.val(formattedString)
    return formattedString;
}



/**
 * @param amount (number) amount to format
 * @param currency (Moneda)
 *
 * @returns string formatted amount
 */
function formatAmountString(amount, currencyCode) {
    amount=Math.round(amount * 100) / 100
    var number = '' + amount
    number = number.split('.')
    var formattedString = number[0].replace(/\B(?=(\d{3})+\b)/g, ".")

    if (currencyCode != 6900) {
        if (number[1] !== undefined) {
            number[1] += '0'
            formattedString += ',' + number[1].substring(0, 2)
        } else {
            formattedString += ',00'
        }
    }

    return formattedString
}

//GS 2 decimales. Otra hasta 8 decimales
function formatAmountStringExchange(amount, currencyCode) {
    var number = '' + amount
    number = number.split('.')
    var formattedString = number[0].replace(/\B(?=(\d{3})+\b)/g, ".")

    if (number[1] !== undefined) {
		if(currencyCode != 6900)
        	formattedString += ',' + number[1];
		else
			formattedString += ',' + number[1].substring(0,2);
    } else {
        if(currencyCode != 6900)
            formattedString += ',00';
    }

    return formattedString
}

function formatAmountStringNoRound(amount, currencyCode) {

    var number = '' + amount;
    number = number.split('.');
    var formattedString = number[0].replace(/\B(?=(\d{3})+\b)/g, ".");

    if (currencyCode != 6900) {
        if (number[1] !== undefined) {
            number[1] += '0';
            formattedString += ',' + number[1].substring(0, 2)
        } else {
            formattedString += ',00';
        }
    }

    return formattedString;
}

$.fn.setCursorPosition = function (pos) {
    this.each(function (index, elem) {
        if (elem.setSelectionRange) {
            elem.setSelectionRange(pos, pos);
        } else if (elem.createTextRange) {
            var range = elem.createTextRange();
            range.collapse(true);
            range.moveEnd('character', pos);
            range.moveStart('character', pos);
            range.select();
        }
    });
    return this;
};

function amountValueToBigdecimal(value){
	value = value.replace(/\./g, '')
    value = value.replace(/,/g, '.')
    return value;
}

$(document).on('paste','input.inputAmount', function (e) {
    var pastedData = e.originalEvent.clipboardData.getData('text');
    if(pastedData.substring(0,1) === '0'){
        return false;
    }
});

$(document).on('keydown', 'input.inputAmount', function (e) {
    /// check if selected
    if(isTextSelected(this) && e.keyCode !== 9  && e.keyCode !== 37  && e.keyCode !== 38  && e.keyCode !== 39  && e.keyCode !== 40){
        $(this).val("");
        return true;
    }

    /*No 0 a la izquierda*/
    if(this.selectionStart === 0 &&( e.keyCode === 48 || e.keyCode === 96)){
        return false;
    }




    var decimals = $(this).attr('data-decimals') === 'true';
    var self=this;
    var start = this.selectionStart,
        end = this.selectionEnd;
    var originalLength=$(this).val().length;
    formatAmount($(this), decimals);
    var newLength=$(this).val().length;


});

$(document).on('keyup', 'input.inputAmount', function (e) {

   /* if($(this).val().substring(0,1) === '0'){
        $(this).val($(this).val().substring(1, $(this).val().length));
    }*/


    var decimals = $(this).attr('data-decimals') === 'true';
    var self=this;
    var start = this.selectionStart,
        end = this.selectionEnd;
    var originalLength=$(this).val().length;
    formatAmount($(this), decimals);
    var newLength=$(this).val().length;
    /// Set cursor position
    if(e.keyCode==8){
        if(originalLength==newLength){
            self.setSelectionRange(start, end);
        }
        else if(newLength<originalLength){
            self.setSelectionRange(start-1, end-1);
        }

    }
    else if(e.keyCode==37 || e.keyCode==39){
        //
    }
    else{
        if(newLength>originalLength){
            self.setSelectionRange(start+1, end+1);
        }
        else{
            self.setSelectionRange(start, end);
        }

    }
    ///



});

$(document).on('change', 'input.inputAmount', function (e) {
    var decimals = $(this).attr('data-decimals') === 'true'
    /*formatAmount($(this), decimals);*/

});



$(document).on('focusout', 'input.inputAmount', function () {
    var decimals = $(this).attr('data-decimals') === 'true'
    if(decimals && $(this).val()!=""){
        if( $(this).val().indexOf(",")<0 ){
            $(this).val(  $(this).val()+",00");
        }
        else if( $(this).val().indexOf(",")>=0){
            var value=$(this).val().split(",");
            if(value[1].length==0){
                $(this).val(  $(this).val()+"00")
            }
            else if(value[1].length==1){
                $(this).val(  $(this).val()+"0")
            }

        }
    }

});


/**
 * Solo numeros
 */
$(document).on('keypress', 'input.inputAmount, input.onlyNumber', function (event) {

    var decimals=$(this).attr("data-decimals")=="true";
    if(event.keyCode==13) return false;
    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return controltag(event);
        }

    }
    else{
        if(event.keyCode==46){
            $(this).val($(this).val()+',');
            return false;
        }
        if(event.keyCode==44)return controltag(event);

        var valor=$(this).val();
        if(decimals){
            if(valor.indexOf(",")>=0){
                if(valor.length==20){
                    return false;
                }
            }
            else{
                if(valor.length==17){
                    return false;
                }
            }
        }
        else{
            if(valor.length==19){
                return  false;
            }
        }
        return controltag(event);
    }

});

$(document).on('keypress', 'input.inputNumber', function (event) {
   
    if(event.keyCode==44)return controltag(event);
    var valor=$(this).val();
    if(valor.indexOf(",")>=0){
        if(valor.length==22){
            return false;
        }
    }else{
        if(valor.length==19){
            return  false;
        }
    }
    return controltag(event);
});


function controltag(e) {
    tecla = (document.all) ? e.keyCode : e.which;

    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==44) return true;
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos
    //patron =/[0-9\s]/;// -> solo letras
    patron =/[0-9\s]/;// -> solo numeros
    te = String.fromCharCode(tecla);
    return patron.test(te);
}

/**
 * Permite copiar , pegar y cortar del campo
 * @param e
 * @returns {boolean}
 */
function permiteCopiaPegaCorta(e) {

    e = e||window.event; // IE support
    var c = e.keyCode;
    var ctrlDown = e.ctrlKey||e.metaKey; // Mac support
    if (ctrlDown && e.altKey) return true;

    // Check for ctrl+c, v and x
    else if (ctrlDown && c === 67) return true; // c
    else if (ctrlDown && c === 86) return true; // v
    else if (ctrlDown && c === 88) return true; // x
}

function isTextSelected(input){
    var startPos = input.selectionStart;
    var endPos = input.selectionEnd;
    var doc = document.selection;

    if(doc && doc.createRange().text.length != 0){
        return true;
    }else if (!doc && input.value.substring(startPos,endPos).length != 0){
        if($(input).val().length==endPos){
            return true;
        }

    }
    return false;
}


function cardNumberFormat(elem) {

    var value = elem.val()
    value = value.replace(/\-/g, '')
    value = value.replace(/[^0-9\.]+/g, '')
    
    if (value.length > 16) {
    	value = value.substring(0,16)
    }
        
    var formattedString = value.replace(/\B(?=(\d{4})+\b)/g, "-");

    elem.val(formattedString)
}

$(document).on('keyup', 'input.cardNumber', function () {
	cardNumberFormat($(this));
});

function redirectLoginExpired(code) {
   if(code)
   setTimeout(function () {
       if(code=="auth1012"||code== "a1100" ||code== "a1106" || code=="a1107" || code=="a1405" || code=="a1407"){
           window.location.href=baseUrl+"/login?errorCode=SESSION_EXPIRED";
       }
       else if(code.includes("a1019") || code.includes("a1409")){
           window.location.href=baseUrl+"/login?errorCode=SESSION_CANCELLED";
       }
   },2000);

}

function validateEmail(email) {
    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
}
function checkPasswordValid(password) {
    var mensaje="La contraseña debe contener al menos: ";
    var mensaje_original="La contraseña debe contener al menos: ";
    var check=true;
    if(!(/\d/.test(password) || /[^\w\.\-]/.test(password))){
        mensaje=mensaje+"Un valor numérico y/o carácter especial";
        check=false;
    }
    if(!(/[a-z]/.test(password))){
        if(mensaje!=mensaje_original){
            mensaje=mensaje+", una letra minúscula";
        }
        else{
            mensaje=mensaje+"Una letra minúscula";
        }
        /*mensaje=mensaje+"/n -Una letra minúscula";*/
        check=false;
    }
    if(!(/[A-Z]/.test(password))){
        if(mensaje!=mensaje_original){
            mensaje=mensaje+" y una letra mayúscula";
        }
        else{
            mensaje=mensaje+"Una letra mayúscula";
        }
        /*mensaje=mensaje+"/n -Una letra mayúscula";*/
        check=false;
    }
    if(!check){
        showErrorMessage(mensaje);
    }

    return check;
}


$(function () {
    $('input').attr("onpaste", "return false");

});

$(document).on('keypress', 'input.noSpecialCharacter', function (event) {

    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return removeSpecialCharacter(event);
        }
    }
    else{
        return removeSpecialCharacter(event);
    }
});

function removeSpecialCharacter(e) {

    var tecla = (document.all) ? e.keyCode : e.which;
    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==44) return true;
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos

    var patron =/[a-zA-Z0-9-À-ÿ\u00f1\u00d1\s]/;
    var te = String.fromCharCode(tecla);
    return patron.test(te);

}

$(document).on('keypress', 'input.noSpecialCharacterAndEmojis', function (event) {

    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return removeSpecialCharacterAndEmojis(event);
        }
    }
    else{
        return removeSpecialCharacterAndEmojis(event);
    }
});



$(document).on('paste','input.noSpecialCharacterAndEmojis', function(e){
    // access the clipboard using the api
    var pastedData = e.originalEvent.clipboardData.getData('text');
    return patronNoSpecialCharacterAndEmojis.test(pastedData);
} );

function removeSpecialCharacterAndEmojis(e){

    var tecla = (document.all) ? e.keyCode : e.which;
    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==44) return true;
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos

    var te = String.fromCharCode(tecla);
    return patronNoSpecialCharacterAndEmojis.test(te);
}

$(document).on('keypress', 'input.docNumber', function (event) {

    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return docNumberAdmits(event);
        }
    }
    else{
        return docNumberAdmits(event);
    }
});

function docNumberAdmits(e) {

    var tecla = (document.all) ? e.keyCode : e.which;
    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==44) return true;
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos

    var patron =/[a-zA-Z0-9-\s]/;
    var te = String.fromCharCode(tecla);
    return patron.test(te);

}

///Filtro para aceptar solo números
$.fn.inputFilter = function(inputFilter) {
    return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function() {
        if (inputFilter(this.value)) {
            this.oldValue = this.value;
            this.oldSelectionStart = this.selectionStart;
            this.oldSelectionEnd = this.selectionEnd;
        } else if (this.hasOwnProperty("oldValue")) {
            this.value = this.oldValue;
            this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
        }
    });
};
// Resize window//
$( window ).resize(function() {
    if(typeof adjustContainer === "function") adjustContainer();
});

function getFormattedDate(date) {
    var year = date.getFullYear();

    var month = (1 + date.getMonth()).toString();
    month = month.length > 1 ? month : '0' + month;

    var day = date.getDate().toString();
    day = day.length > 1 ? day : '0' + day;

    return day + '/' + month + '/' + year;
}

$(document).on('keypress', 'input.validate-ISO20022', function (event) {

    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return validatorISO20022(event, $(this));
        }
    }
    else{
        return validatorISO20022(event, $(this));
    }
});


var patronISO20022 =/^[a-zA-Z0-9]+[a-zA-Z0-9\/\-?:().,‘+\s]*$/;

$(document).on('keyup', 'input.validate-ISO20022', function (event) {
   if(!patronISO20022.test($(this).val())) {
       var str = $(this).val().replace(/[^a-zA-Z0-9]/, "");
       $(this).val(str);
   }
});

function validatorISO20022(e, input) {
    var tecla = (document.all) ? e.keyCode : e.which;
    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos


    var te = String.fromCharCode(tecla);
    var text = input.val()+ te;
    return patronISO20022.test(text);
}

$(document).on('paste','input.validate-ISO20022', function(e){
    // access the clipboard using the api
    var pastedData = e.originalEvent.clipboardData.getData('text');
    return patronISO20022.test(pastedData);
} );



var patronISO20022TILDE =/^[a-zA-Z0-9áéíóúÁÉÍÓÚ]+[a-zA-Z0-9áéíóúÁÉÍÓÚ\/\-?:().,‘+\s]*$/;

$(document).on('keypress', 'input.validate-ISO20022-tildes', function (event) {

    if(event.currentTarget.value.length==0){
        if(event.keyCode==48){
            return false;
        }
        else{
            return validatorISO20022TILDE(event, $(this));
        }
    }
    else{
        return validatorISO20022TILDE(event, $(this));
    }
});

$(document).on('keyup', 'input.validate-ISO20022-tildes', function (event) {
    if(!patronISO20022TILDE.test($(this).val())) {
        var str = $(this).val().replace(/[^a-zA-Z0-9]/, "");
        $(this).val(str);
    }
});

function validatorISO20022TILDE(e, input) {
    var tecla = (document.all) ? e.keyCode : e.which;
    if (tecla==8) return true; // para la tecla de retroseso
    else if (tecla==0||tecla==9)  return true; //<-- PARA EL TABULADOR-> su keyCode es 9 pero en tecla se esta transformando a 0 asi que porsiacaso los dos


    var te = String.fromCharCode(tecla);
    var text = input.val()+ te;
    return patronISO20022TILDE.test(text);
}

function elementVisibleInScreen(element) {
    var visible = true;
    var windowTop = $(document).scrollTop();
    var windowBottom = windowTop + window.innerHeight;
    var elementPositionTop = element.offset().top;
    var elementPositionBottom = elementPositionTop + element.height();
    if (elementPositionTop >= windowBottom || elementPositionBottom <= windowTop) {
        visible = false;
    }
    return visible;
}

function goToLink(link) {

    location.href = link;
}
function isEmpty(obj) {
    for(var key in obj) {
        if(obj.hasOwnProperty(key))
            return false;
    }
    return true;
}


//Se agrega esta parte para el control de inactividad
var sessionCheckIntervalInMilliseconds;
var timeoutInMiliseconds;
var timeoutId;

$(document).ready(function(){
    // do some other initialization

    sessionCheckIntervalInMilliseconds = SESSION_CHECK_INTERVAL_MILLIS_FROM_PROPERTIES;
    setupSessionActiveCheckTimer();

    timeoutInMiliseconds = TIMEOUT_IN_MILLIS_FROM_PROPERTIES;
    setupInactivityTimers();
})
  
function startTimer() { 
    // window.setTimeout returns an Id that can be used to start and stop a timer
    timeoutId = window.setTimeout(doInactive, timeoutInMiliseconds)
}
  
function doInactive() {
    // does whatever you need it to actually do - probably signs them out or stops polling the server for info
    window.location=baseUrl+"/logout";
}
 
function setupInactivityTimers () {
    document.addEventListener("mousemove", resetTimer, false);
    document.addEventListener("mousedown", resetTimer, false);
    document.addEventListener("keypress", resetTimer, false);
    document.addEventListener("touchmove", resetTimer, false);
     
    startTimer();
}

function resetTimer() { 
    window.clearTimeout(timeoutId)
    startTimer();
}

function setupSessionActiveCheckTimer () {

    var is2FAView = window.location.href.indexOf('login/2fa-check') > 0; //si encuentra en la URL.

    if(is2FAView) {
        console.log("Ignoring check session status in login/2fa-check view.");
        return;
    }

    window.setInterval(doCheckSessionActive, sessionCheckIntervalInMilliseconds);

}

function doCheckSessionActive() {

    console.log("Going to call "+baseUrl+"/auth/session/verify-status ");

    $.ajax({
        url:  baseUrl+"/auth/session/verify-status",
        // data: {"casa": true, "altura": 200},
        cache: false,
        type : 'POST',
        success: function(result){
            console.log('In doCheckSessionActive logging received result:');
            console.log(result);
            if(result.hasError){
                var errorBody = result.errorBody;
                redirectLoginExpired(errorBody.code);
            }
        },error: function(result){
            console.log(result);
        },complete : function(){
        }
    });

}

function removeAccentsAndCharacters (str) {

    var defaultDiacriticsRemovalMap = [
        {'base':'A', 'letters':/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},
        {'base':'AA','letters':/[\uA732]/g},
        {'base':'AE','letters':/[\u00C6\u01FC\u01E2]/g},
        {'base':'AO','letters':/[\uA734]/g},
        {'base':'AU','letters':/[\uA736]/g},
        {'base':'AV','letters':/[\uA738\uA73A]/g},
        {'base':'AY','letters':/[\uA73C]/g},
        {'base':'B', 'letters':/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},
        {'base':'C', 'letters':/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},
        {'base':'D', 'letters':/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},
        {'base':'DZ','letters':/[\u01F1\u01C4]/g},
        {'base':'Dz','letters':/[\u01F2\u01C5]/g},
        {'base':'E', 'letters':/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},
        {'base':'F', 'letters':/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},
        {'base':'G', 'letters':/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},
        {'base':'H', 'letters':/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},
        {'base':'I', 'letters':/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},
        {'base':'J', 'letters':/[\u004A\u24BF\uFF2A\u0134\u0248]/g},
        {'base':'K', 'letters':/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},
        {'base':'L', 'letters':/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},
        {'base':'LJ','letters':/[\u01C7]/g},
        {'base':'Lj','letters':/[\u01C8]/g},
        {'base':'M', 'letters':/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},
        {'base':'N', 'letters':/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},
        {'base':'NJ','letters':/[\u01CA]/g},
        {'base':'Nj','letters':/[\u01CB]/g},
        {'base':'O', 'letters':/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},
        {'base':'OI','letters':/[\u01A2]/g},
        {'base':'OO','letters':/[\uA74E]/g},
        {'base':'OU','letters':/[\u0222]/g},
        {'base':'P', 'letters':/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},
        {'base':'Q', 'letters':/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},
        {'base':'R', 'letters':/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},
        {'base':'S', 'letters':/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},
        {'base':'T', 'letters':/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},
        {'base':'TZ','letters':/[\uA728]/g},
        {'base':'U', 'letters':/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},
        {'base':'V', 'letters':/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},
        {'base':'VY','letters':/[\uA760]/g},
        {'base':'W', 'letters':/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},
        {'base':'X', 'letters':/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},
        {'base':'Y', 'letters':/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},
        {'base':'Z', 'letters':/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},
        {'base':'a', 'letters':/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},
        {'base':'aa','letters':/[\uA733]/g},
        {'base':'ae','letters':/[\u00E6\u01FD\u01E3]/g},
        {'base':'ao','letters':/[\uA735]/g},
        {'base':'au','letters':/[\uA737]/g},
        {'base':'av','letters':/[\uA739\uA73B]/g},
        {'base':'ay','letters':/[\uA73D]/g},
        {'base':'b', 'letters':/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},
        {'base':'c', 'letters':/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},
        {'base':'d', 'letters':/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},
        {'base':'dz','letters':/[\u01F3\u01C6]/g},
        {'base':'e', 'letters':/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},
        {'base':'f', 'letters':/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},
        {'base':'g', 'letters':/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},
        {'base':'h', 'letters':/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},
        {'base':'hv','letters':/[\u0195]/g},
        {'base':'i', 'letters':/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},
        {'base':'j', 'letters':/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},
        {'base':'k', 'letters':/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},
        {'base':'l', 'letters':/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},
        {'base':'lj','letters':/[\u01C9]/g},
        {'base':'m', 'letters':/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},
        {'base':'n', 'letters':/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},
        {'base':'nj','letters':/[\u01CC]/g},
        {'base':'o', 'letters':/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},
        {'base':'oi','letters':/[\u01A3]/g},
        {'base':'ou','letters':/[\u0223]/g},
        {'base':'oo','letters':/[\uA74F]/g},
        {'base':'p','letters':/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},
        {'base':'q','letters':/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},
        {'base':'r','letters':/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},
        {'base':'s','letters':/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},
        {'base':'t','letters':/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},
        {'base':'tz','letters':/[\uA729]/g},
        {'base':'u','letters':/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},
        {'base':'v','letters':/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},
        {'base':'vy','letters':/[\uA761]/g},
        {'base':'w','letters':/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},
        {'base':'x','letters':/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},
        {'base':'y','letters':/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},
        {'base':'z','letters':/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}
    ];

    for(var i=0; i<defaultDiacriticsRemovalMap.length; i++) {
        str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);
    }
    str = str.replace(/[^a-zA-Z0-9-_]/g, "");
    return str;

}

